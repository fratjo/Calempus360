// <auto-generated />
using System;
using Calempus360.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Calempus360.Infrastructure.Migrations
{
    [DbContext(typeof(Calempus360DbContext))]
    [Migration("20250212220520_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Calempus360.Core.Models.AcademicYear", b =>
                {
                    b.Property<int>("AcademicYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicYearId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AcademicYearId");

                    b.ToTable("AcademicYears");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("ClassroomId");

                    b.HasIndex("SiteId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Calempus360.Core.Models.ClassroomAcademicYear", b =>
                {
                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.HasKey("ClassroomId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.ToTable("ClassroomsAcademicYear");
                });

            modelBuilder.Entity("Calempus360.Core.Models.ClassroomEquipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId", "ClassroomId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("EquipmentId")
                        .IsUnique();

                    b.ToTable("ClassroomsEquipments");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("WeeklyHours")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Calempus360.Core.Models.CourseEquipmentType", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("EquipmentTypeId", "CourseId", "UniversityId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UniversityId");

                    b.ToTable("CoursesEquipmentTypes");
                });

            modelBuilder.Entity("Calempus360.Core.Models.CourseSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<DateTime>("HourEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HourStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("ScheduleId");

                    b.ToTable("CoursesSchedules");
                });

            modelBuilder.Entity("Calempus360.Core.Models.DayWithoutCourse", b =>
                {
                    b.Property<int>("DayWithoutCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DayWithoutCourseId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("DayWithoutCourseId");

                    b.HasIndex("AcademicYearId");

                    b.ToTable("DaysWithoutCourse");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("EquipmentId");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("Calempus360.Core.Models.EquipmentSession", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId", "SessionId");

                    b.HasIndex("SessionId");

                    b.ToTable("EquipmentSessions");
                });

            modelBuilder.Entity("Calempus360.Core.Models.EquipmentType", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentTypeId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("EquipmentTypeId");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Option", b =>
                {
                    b.Property<int>("Option_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Option_Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Option_Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Calempus360.Core.Models.OptionCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("OptionGrade")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "OptionId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("OptionId");

                    b.ToTable("OptionCourse");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatetimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatetimeStart")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CourseId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("SiteId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Calempus360.Core.Models.SiteAcademicYear", b =>
                {
                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.HasKey("SiteId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.ToTable("SitesAcademicYear");
                });

            modelBuilder.Entity("Calempus360.Core.Models.SiteCourseSchedule", b =>
                {
                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.HasKey("SiteId", "ScheduleId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("SitesCoursesSchedules");
                });

            modelBuilder.Entity("Calempus360.Core.Models.StudentGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("NumberOfStudents")
                        .HasColumnType("int");

                    b.Property<int>("OptionGrade")
                        .HasColumnType("int");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("GroupId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("OptionId");

                    b.HasIndex("SiteId");

                    b.ToTable("StudentGroups");
                });

            modelBuilder.Entity("Calempus360.Core.Models.StudentGroupSession", b =>
                {
                    b.Property<int>("StudentGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("StudentGroupId", "SessionId");

                    b.HasIndex("SessionId");

                    b.ToTable("StudentGroupSessions");
                });

            modelBuilder.Entity("Calempus360.Core.Models.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversityId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("UniversityId");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("Calempus360.Core.Models.UniversitySiteEquipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("EquipmentId")
                        .IsUnique();

                    b.HasIndex("SiteId");

                    b.HasIndex("UniversityId");

                    b.ToTable("UniversitiesSitesEquipments");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Classroom", b =>
                {
                    b.HasOne("Calempus360.Core.Models.Site", "Site")
                        .WithMany("Classrooms")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Calempus360.Core.Models.ClassroomAcademicYear", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("ClassroomAcademicYears")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Classroom", "Classroom")
                        .WithMany("ClassroomAcademicYears")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("Calempus360.Core.Models.ClassroomEquipment", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("ClassroomEquipments")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Classroom", "Classroom")
                        .WithMany("ClassroomEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Equipment", "Equipment")
                        .WithOne("ClassroomEquipment")
                        .HasForeignKey("Calempus360.Core.Models.ClassroomEquipment", "EquipmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Classroom");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("Calempus360.Core.Models.CourseEquipmentType", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("CourseEquipmentTypes")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Course", "Course")
                        .WithMany("EquipmentTypes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.EquipmentType", "EquipmentType")
                        .WithMany("CourseEquipmentTypes")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.University", "University")
                        .WithMany("CourseEquipmentTypes")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Course");

                    b.Navigation("EquipmentType");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Calempus360.Core.Models.DayWithoutCourse", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("DaysWithoutCourse")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Equipment", b =>
                {
                    b.HasOne("Calempus360.Core.Models.EquipmentType", "EquipmentType")
                        .WithMany("Equipments")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("Calempus360.Core.Models.EquipmentSession", b =>
                {
                    b.HasOne("Calempus360.Core.Models.Equipment", "Equipment")
                        .WithMany("EquipmentSessions")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Session", "Session")
                        .WithMany("EquipmentSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("Calempus360.Core.Models.OptionCourse", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("OptionCourses")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Course", "Course")
                        .WithMany("OptionsCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Option", "Option")
                        .WithMany("OptionCourses")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Course");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Session", b =>
                {
                    b.HasOne("Calempus360.Core.Models.Classroom", "Classroom")
                        .WithMany("Sessions")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Course", "Course")
                        .WithMany("Sessions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Site", b =>
                {
                    b.HasOne("Calempus360.Core.Models.University", "University")
                        .WithMany("Sites")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("Calempus360.Core.Models.SiteAcademicYear", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("SiteAcademicYears")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Site", "Site")
                        .WithMany("SiteAcademicYears")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Calempus360.Core.Models.SiteCourseSchedule", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("SiteCourseSchedules")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.CourseSchedule", "CourseSchedule")
                        .WithMany("SitesCourseSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Site", "Site")
                        .WithMany("SiteCourseSchedules")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("CourseSchedule");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Calempus360.Core.Models.StudentGroup", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("StudentGroups")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Option", "Option")
                        .WithMany("StudentGroups")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Site", "Site")
                        .WithMany("StudentGroups")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Option");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Calempus360.Core.Models.StudentGroupSession", b =>
                {
                    b.HasOne("Calempus360.Core.Models.Session", "Session")
                        .WithMany("StudentGroupSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.StudentGroup", "StudentGroup")
                        .WithMany("StudentGroupSessions")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("Calempus360.Core.Models.UniversitySiteEquipment", b =>
                {
                    b.HasOne("Calempus360.Core.Models.AcademicYear", "AcademicYear")
                        .WithMany("UniversitySiteEquipments")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Equipment", "Equipment")
                        .WithOne("UniversitySiteEquipment")
                        .HasForeignKey("Calempus360.Core.Models.UniversitySiteEquipment", "EquipmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.Site", "Site")
                        .WithMany("Equipments")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calempus360.Core.Models.University", "University")
                        .WithMany("Equipments")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Equipment");

                    b.Navigation("Site");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Calempus360.Core.Models.AcademicYear", b =>
                {
                    b.Navigation("ClassroomAcademicYears");

                    b.Navigation("ClassroomEquipments");

                    b.Navigation("CourseEquipmentTypes");

                    b.Navigation("DaysWithoutCourse");

                    b.Navigation("OptionCourses");

                    b.Navigation("SiteAcademicYears");

                    b.Navigation("SiteCourseSchedules");

                    b.Navigation("StudentGroups");

                    b.Navigation("UniversitySiteEquipments");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Classroom", b =>
                {
                    b.Navigation("ClassroomAcademicYears");

                    b.Navigation("ClassroomEquipments");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Course", b =>
                {
                    b.Navigation("EquipmentTypes");

                    b.Navigation("OptionsCourses");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Calempus360.Core.Models.CourseSchedule", b =>
                {
                    b.Navigation("SitesCourseSchedules");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Equipment", b =>
                {
                    b.Navigation("ClassroomEquipment");

                    b.Navigation("EquipmentSessions");

                    b.Navigation("UniversitySiteEquipment");
                });

            modelBuilder.Entity("Calempus360.Core.Models.EquipmentType", b =>
                {
                    b.Navigation("CourseEquipmentTypes");

                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Option", b =>
                {
                    b.Navigation("OptionCourses");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Session", b =>
                {
                    b.Navigation("EquipmentSessions");

                    b.Navigation("StudentGroupSessions");
                });

            modelBuilder.Entity("Calempus360.Core.Models.Site", b =>
                {
                    b.Navigation("Classrooms");

                    b.Navigation("Equipments");

                    b.Navigation("SiteAcademicYears");

                    b.Navigation("SiteCourseSchedules");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Calempus360.Core.Models.StudentGroup", b =>
                {
                    b.Navigation("StudentGroupSessions");
                });

            modelBuilder.Entity("Calempus360.Core.Models.University", b =>
                {
                    b.Navigation("CourseEquipmentTypes");

                    b.Navigation("Equipments");

                    b.Navigation("Sites");
                });
#pragma warning restore 612, 618
        }
    }
}
