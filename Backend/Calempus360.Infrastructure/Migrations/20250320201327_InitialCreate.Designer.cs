// <auto-generated />
using System;
using Calempus360.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Calempus360.Infrastructure.Migrations
{
    [DbContext(typeof(Calempus360DbContext))]
    [Migration("20250320201327_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.AcademicYearEntity", b =>
                {
                    b.Property<Guid>("AcademicYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicYearCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateOnly>("DateEnd")
                        .HasColumnType("DATE");

                    b.Property<DateOnly>("DateStart")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("AcademicYearId");

                    b.ToTable("AcademicYears");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.ClassroomEntity", b =>
                {
                    b.Property<Guid>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("ClassroomId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("SiteId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.ClassroomEquipmentEntity", b =>
                {
                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicYearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EquipmentId", "ClassroomId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("ClassroomsEquipments");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.CourseEntity", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("WeeklyHours")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.CourseEquipmentTypeEntity", b =>
                {
                    b.Property<Guid>("EquipmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicYearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EquipmentTypeId", "CourseId", "UniversityId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UniversityId");

                    b.ToTable("CoursesEquipmentTypes");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.CourseScheduleEntity", b =>
                {
                    b.Property<Guid>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("HourEnd")
                        .HasColumnType("TIME");

                    b.Property<TimeOnly>("HourStart")
                        .HasColumnType("TIME");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("ScheduleId");

                    b.HasIndex("DayOfTheWeek", "HourStart", "HourEnd")
                        .IsUnique();

                    b.ToTable("CoursesSchedules");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.DayWithoutCourseEntity", b =>
                {
                    b.Property<Guid>("DayWithoutCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("AcademicYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("DayWithoutCourseId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("Date")
                        .IsUnique();

                    b.ToTable("DaysWithoutCourse");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.EquipmentEntity", b =>
                {
                    b.Property<Guid>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EquipmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("EquipmentId");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.EquipmentSessionEntity", b =>
                {
                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EquipmentId", "SessionId");

                    b.HasIndex("SessionId");

                    b.ToTable("EquipmentSessions");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.EquipmentTypeEntity", b =>
                {
                    b.Property<Guid>("EquipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("EquipmentTypeId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.OptionCourseEntity", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OptionGrade")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "OptionId", "AcademicYearId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("OptionId");

                    b.ToTable("OptionCourse");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.OptionEntity", b =>
                {
                    b.Property<Guid>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("OptionId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.SessionEntity", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DatetimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatetimeStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("SessionId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ClassroomId", "DatetimeStart", "DatetimeEnd")
                        .IsUnique();

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.SiteCourseScheduleEntity", b =>
                {
                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SiteId", "ScheduleId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("SitesCoursesSchedules");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.SiteEntity", b =>
                {
                    b.Property<Guid>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("SiteId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("UniversityId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.StudentGroupEntity", b =>
                {
                    b.Property<Guid>("StudentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("AcademicYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("NumberOfStudents")
                        .HasColumnType("int");

                    b.Property<int>("OptionGrade")
                        .HasColumnType("int");

                    b.Property<Guid?>("OptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("StudentGroupId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("OptionId");

                    b.HasIndex("SiteId");

                    b.ToTable("StudentGroups");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.StudentGroupSessionEntity", b =>
                {
                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentGroupId", "SessionId");

                    b.HasIndex("SessionId");

                    b.ToTable("StudentGroupSessions");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.UniversityEntity", b =>
                {
                    b.Property<Guid>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("UniversityId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.UniversitySiteEquipmentEntity", b =>
                {
                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EquipmentId");

                    b.HasIndex("SiteId");

                    b.HasIndex("UniversityId");

                    b.ToTable("UniversitiesSitesEquipments");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.ClassroomEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.SiteEntity", "SiteEntity")
                        .WithMany("Classrooms")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SiteEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.ClassroomEquipmentEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.AcademicYearEntity", "AcademicYearEntity")
                        .WithMany("ClassroomEquipments")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.ClassroomEntity", "ClassroomEntity")
                        .WithMany("ClassroomEquipments")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.EquipmentEntity", "EquipmentEntity")
                        .WithMany("ClassroomEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYearEntity");

                    b.Navigation("ClassroomEntity");

                    b.Navigation("EquipmentEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.CourseEquipmentTypeEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.AcademicYearEntity", "AcademicYearEntity")
                        .WithMany("CourseEquipmentTypes")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.CourseEntity", "CourseEntity")
                        .WithMany("EquipmentTypes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.EquipmentTypeEntity", "EquipmentTypeEntity")
                        .WithMany("CourseEquipmentTypes")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.UniversityEntity", "UniversityEntity")
                        .WithMany("CourseEquipmentTypes")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYearEntity");

                    b.Navigation("CourseEntity");

                    b.Navigation("EquipmentTypeEntity");

                    b.Navigation("UniversityEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.DayWithoutCourseEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.AcademicYearEntity", "AcademicYearEntity")
                        .WithMany("DaysWithoutCourses")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AcademicYearEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.EquipmentEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.EquipmentTypeEntity", "EquipmentTypeEntity")
                        .WithMany("Equipments")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("EquipmentTypeEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.EquipmentSessionEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.EquipmentEntity", "EquipmentEntity")
                        .WithMany("EquipmentSessions")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.SessionEntity", "SessionEntity")
                        .WithMany("EquipmentSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentEntity");

                    b.Navigation("SessionEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.OptionCourseEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.AcademicYearEntity", "AcademicYearEntity")
                        .WithMany("OptionCourses")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.CourseEntity", "CourseEntity")
                        .WithMany("OptionsCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.OptionEntity", "OptionEntity")
                        .WithMany("OptionCourses")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYearEntity");

                    b.Navigation("CourseEntity");

                    b.Navigation("OptionEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.SessionEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.ClassroomEntity", "ClassroomEntity")
                        .WithMany("Sessions")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.CourseEntity", "CourseEntity")
                        .WithMany("Sessions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassroomEntity");

                    b.Navigation("CourseEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.SiteCourseScheduleEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.CourseScheduleEntity", "CourseScheduleEntity")
                        .WithMany("SitesCourseSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.SiteEntity", "SiteEntity")
                        .WithMany("SiteCourseSchedules")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseScheduleEntity");

                    b.Navigation("SiteEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.SiteEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.UniversityEntity", "UniversityEntity")
                        .WithMany("Sites")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("UniversityEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.StudentGroupEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.AcademicYearEntity", "AcademicYearEntity")
                        .WithMany("StudentGroups")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.OptionEntity", "OptionEntity")
                        .WithMany("StudentGroups")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.SiteEntity", "SiteEntity")
                        .WithMany("StudentGroups")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AcademicYearEntity");

                    b.Navigation("OptionEntity");

                    b.Navigation("SiteEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.StudentGroupSessionEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.SessionEntity", "SessionEntity")
                        .WithMany("StudentGroupSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.StudentGroupEntity", "StudentGroupEntity")
                        .WithMany("StudentGroupSessions")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionEntity");

                    b.Navigation("StudentGroupEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.UniversitySiteEquipmentEntity", b =>
                {
                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.EquipmentEntity", "EquipmentEntity")
                        .WithOne("UniversitySiteEquipmentEntity")
                        .HasForeignKey("Calempus360.Infrastructure.Persistence.Entities.UniversitySiteEquipmentEntity", "EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.SiteEntity", "SiteEntity")
                        .WithMany("Equipments")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Calempus360.Infrastructure.Persistence.Entities.UniversityEntity", "UniversityEntity")
                        .WithMany("Equipments")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentEntity");

                    b.Navigation("SiteEntity");

                    b.Navigation("UniversityEntity");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.AcademicYearEntity", b =>
                {
                    b.Navigation("ClassroomEquipments");

                    b.Navigation("CourseEquipmentTypes");

                    b.Navigation("DaysWithoutCourses");

                    b.Navigation("OptionCourses");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.ClassroomEntity", b =>
                {
                    b.Navigation("ClassroomEquipments");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.CourseEntity", b =>
                {
                    b.Navigation("EquipmentTypes");

                    b.Navigation("OptionsCourses");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.CourseScheduleEntity", b =>
                {
                    b.Navigation("SitesCourseSchedules");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.EquipmentEntity", b =>
                {
                    b.Navigation("ClassroomEquipments");

                    b.Navigation("EquipmentSessions");

                    b.Navigation("UniversitySiteEquipmentEntity")
                        .IsRequired();
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.EquipmentTypeEntity", b =>
                {
                    b.Navigation("CourseEquipmentTypes");

                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.OptionEntity", b =>
                {
                    b.Navigation("OptionCourses");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.SessionEntity", b =>
                {
                    b.Navigation("EquipmentSessions");

                    b.Navigation("StudentGroupSessions");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.SiteEntity", b =>
                {
                    b.Navigation("Classrooms");

                    b.Navigation("Equipments");

                    b.Navigation("SiteCourseSchedules");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.StudentGroupEntity", b =>
                {
                    b.Navigation("StudentGroupSessions");
                });

            modelBuilder.Entity("Calempus360.Infrastructure.Persistence.Entities.UniversityEntity", b =>
                {
                    b.Navigation("CourseEquipmentTypes");

                    b.Navigation("Equipments");

                    b.Navigation("Sites");
                });
#pragma warning restore 612, 618
        }
    }
}
